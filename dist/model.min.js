"use strict";class Model{constructor(t={},e=[]){Object.defineProperty(this,"_",{enumerable:!1,configurable:!1,writable:!1,value:{dt:t,ev:{},dl:{},sp:!1,ct:0}});const s=Object.keys(t);for(const t of s)this._addProperty(t,e)}_isObject(t){return"[object Object]"===Object.prototype.toString.call(t)}_separate(t){let e=t;return t.includes(".")&&(e=(t=(t=t.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split(".")),e}_isDate(t){return t instanceof Date&&!isNaN(t.valueOf())}_clone(t){let e=null;if(this._isObject(t)){e={};const s=Object.keys(t);for(const i of s)this._isObject(t[i])||Array.isArray(t[i])?e[i]=this._clone(t[i]):this._isDate(t[i])?e[i]=new Date(t[i].getTime()):e[i]=t[i]}else if(Array.isArray(t)){e=[];for(const s of t){let t;t=this._isObject(s)||Array.isArray(s)?this._clone(s):this._isDate(s)?new Date(s.getTime()):s,e.push(t)}}return e}_isEquals(t,e){let s=!1;if(Array.isArray(t)&&Array.isArray(e)){s=t.join("")===e.join("")}else s=t===e;return s}_addProperty(t,e=[]){this._.dt.hasOwnProperty(t)&&(this._isObject(this._.dt[t])?e.include(t)?this[t]=new Model(this._.dt[t],e):Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:self._.dt[t]}):Object.defineProperty(this,t,{configurable:!1,enumerable:!0,get:()=>{let e=this._.dt[t];return"function"==typeof this[t+"Read"]&&(e=this[t+"Read"](e)),e},set:e=>{"function"==typeof this[t+"Write"]&&(e=this[t+"Write"](e));var s=this._.dt[t],i={};if(s!==e)if(this._.dt[t]=e,this._.dl[t]=this._.dl[t]||{original:s},this._.dl[t].actual=e,this._.dl[t].previous=s,this._.sp)this._.ct++;else if(Array.isArray(this._.ev[t])){i[t]={};const e=Object.keys(this._.dl[t]);for(const s of e)i[t][s]=this._.dl[t][s];this._isEquals(this._.dl[t].actual,this._.dl[t].original)&&delete this._.dl[t];for(const e of this._.ev[t])"function"==typeof e&&e.call(e,i)}}}))}_model(t){let e=this;const s=this._separate(t);if(Array.isArray(s)){s.pop();for(const t of s){if(!(t in e))return;e=e[t]}}return e}_property(t){let e=t;const s=this._separate(t);return Array.isArray(s)&&(e=s[s.length-1]),e}_toObject(){const t=this._clone(this._.dt),e=Object.keys(this);for(const s of e)this[s]instanceof Model&&(t[s]=this[s]._toObject());return t}_suspend(){this._.sp=!0,this._.ct=0;const t=Object.keys(this);for(const e of t)this[e]instanceof Model&&this[e]._suspend()}_resume(){if(this._.sp=!1,this._.ct>0){this._.ct=0;const t=[],e=Object.keys(this._.dt);for(const s of e)for(const e of this._.ev[s])t.includes(e)||t.push(e);for(const e of t)"function"==typeof e&&e.call(this,this._.dl)}const t=Object.keys(this);for(const e of t)this[e]instanceof Model&&this[e]._resume()}_delta(){const t=this._clone(this._.dl),e=Object.keys(this);for(const s of e)this[s]instanceof Model&&(t[s]=this[s]._delta());return t}_reset(){this._.dl={};const t=Object.keys(this);for(const e of t)this[e]instanceof Model&&this[e]._reset()}_revert(t){const e=t=>{const e=this._model(t);e._.dl[t]&&(e[t]=e._.dl[t].original)};if("string"==typeof t){const s=t.split(" ");for(const t of s)e(t)}else if(Array.isArray(t))for(const s of t)e(s);else if(null==t){const t=Object.keys(this._.dt);for(const s of t)e(s)}}_changed(t){let e=!1;const s=this._model(t),i=s._delta(),o=t=>{let e=!1;return i[t]&&i[t].original!==s[t]&&(e=!0),e};if("string"==typeof t){const s=t.split(" ");for(const t of s)if(o(t)&&!1===e){e=!0;break}}else if(Array.isArray(t)){for(const s of t)if(o(s)&&!1===e){e=!0;break}}else if(null==t){e=Object.keys(i).length>0}return e}_watch(){let t,e,s={};if(arguments.length>0){if(1===arguments.length){"function"==typeof arguments[0]?t=arguments[0]:this._isObject(arguments[0])&&(e=arguments[0]);const s=Object.keys(this);for(const t of s)this[t]instanceof Model&&this[t]._watch(arguments[0])}else arguments.length>=2&&(e=arguments[0],t=arguments[1]);if("string"==typeof e&&"function"==typeof t){const i=e.split(" ");for(const e of i)s[e]=t}else if(Array.isArray(e)&&"function"==typeof t)for(const i of e)s[i]=t;else if(this._isObject(e))s=e;else if("function"==typeof t){const e=Object.keys(this._.dt);for(const i of e)this._isObject(this._.dt[i])||(s[i]=t)}const i=Object.keys(s);for(const t of i){const e=this._model(t);Array.isArray(e._.ev[t])?e._.ev[t].push(s[t]):e._.ev[t]=[s[t]]}}}_unwatch(){let t,e;const s=t=>{const s=this._model(t);"function"==typeof e&&Array.isArray(s._.ev[t])?(s._.ev[t]=s._.ev[t].filter((t=>t.toString()!==e.toString())),0===s._.ev[t].length&&delete s._.ev[t]):(s._.ev[t]=null,delete s._.ev[t])};if(arguments.length>0)if(1===arguments.length?"function"==typeof arguments[0]?e=arguments[0]:this._isObject(arguments[0])&&(t=arguments[0]):arguments.length>=2&&(t=arguments[0],e=arguments[1]),"string"==typeof t){const e=t.split(" ");for(const t of e)s(t)}else if(Array.isArray(t))for(const e of t)s(e);else if(this._isObject(t)){const e=Object.keys(t);for(const t of e)s(t)}else{const t=Object.keys(this._.dt);for(const e of t)this._isObject(this._.dt[e])||s(e)}else{this._.ev={};const t=Object.keys(this);for(const e of t)this[e]instanceof Model&&(this[e]._.ev={})}}_add(t,e=null){this._.dt[t]=e,this._addProperty(t)}_clear(t={}){const e=Object.keys(this);for(const s of e)this[s]instanceof Model?this[s]._clear(t):t[s]?this[s]=t[s]:Array.isArray(this[s])?this[s]=[]:"boolean"==typeof this[s]?this[s]=!1:"number"==typeof this[s]?this[s]=0:"string"==typeof this[s]?this[s]="":this[s]=null}_getValue(t){const e=this._model(t),s=this._separate(t);return e[Array.isArray(s)?s[s.length-1]:s]}_setValue(t,e){const s=this._model(t),i=this._separate(t);s[Array.isArray(i)?i[i.length-1]:i]=e}}"undefined"!=typeof module&&void 0!==module.exports?module.exports={Model:Model}:(window.bimo=window.bimo||{},window.bimo.Model=Model);