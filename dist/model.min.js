"use strict";class Model{constructor(t={}){Object.defineProperty(this,"_",{enumerable:!1,configurable:!1,writable:!1,value:{dt:t,ev:{},dl:{},sp:!1,ct:0}});const s=Object.keys(t);for(const t of s)this._addProperty(t)}_isObject(t){return"[object Object]"===Object.prototype.toString.call(t)}_separate(t){let s=t;return t.includes(".")&&(s=(t=(t=t.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split(".")),s}_isDate(t){return t instanceof Date&&!isNaN(t.valueOf())}_clone(t){let s=null;if(this._isObject(t)){s={};const e=Object.keys(t);for(const i of e)this._isObject(t[i])||Array.isArray(t[i])?s[i]=this._clone(t[i]):this._isDate(t[i])?s[i]=new Date(t[i].getTime()):s[i]=t[i]}else if(Array.isArray(t)){s=[];for(const e of t){let t;t=this._isObject(e)||Array.isArray(e)?this._clone(e):this._isDate(e)?new Date(e.getTime()):e,s.push(t)}}return s}_isEquals(t,s){let e=!1;if(Array.isArray(t)&&Array.isArray(s)){e=t.join("")===s.join("")}else e=t===s;return e}_addProperty(t){this._.dt.hasOwnProperty(t)&&(this._isObject(this._.dt[t])?this[t]=new Model(this._.dt[t]):Object.defineProperty(this,t,{configurable:!1,enumerable:!0,get:()=>{let s=this._.dt[t];return"function"==typeof this[t+"Read"]&&(s=this[t+"Read"](s)),s},set:s=>{"function"==typeof this[t+"Write"]&&(s=this[t+"Write"](s));var e=this._.dt[t],i={};if(e!==s)if(this._.dt[t]=s,this._.dl[t]=this._.dl[t]||{original:e},this._.dl[t].actual=s,this._.dl[t].previous=e,this._.sp)this._.ct++;else if(Array.isArray(this._.ev[t])){i[t]={};const s=Object.keys(this._.dl[t]);for(const e of s)i[t][e]=this._.dl[t][e];this._isEquals(this._.dl[t].actual,this._.dl[t].original)&&delete this._.dl[t];for(const s of this._.ev[t])"function"==typeof s&&s.call(s,i)}}}))}_model(t){let s=this;const e=this._separate(t);if(Array.isArray(e)){e.pop();for(const t of e){if(!(t in s))return;s=s[t]}}return s}_toObject(){const t=this._clone(this._.dt),s=Object.keys(this);for(const e of s)this[e]instanceof Model&&(t[e]=this[e]._toObject());return t}_suspend(){this._.sp=!0,this._.ct=0;const t=Object.keys(this);for(const s of t)this[s]instanceof Model&&this[s]._suspend()}_resume(){if(this._.sp=!1,this._.ct>0){this._.ct=0;const t=[],s=Object.keys(this._.dt);for(const e of s)for(const s of this._.ev[e])t.includes(s)||t.push(s);for(const s of t)"function"==typeof s&&s.call(this,this._.dl)}const t=Object.keys(this);for(const s of t)this[s]instanceof Model&&this[s]._resume()}_delta(){const t=this._clone(this._.dl),s=Object.keys(this);for(const e of s)this[e]instanceof Model&&(t[e]=this[e]._delta());return t}_reset(){this._.dl={};const t=Object.keys(this);for(const s of t)this[s]instanceof Model&&this[s]._reset()}_revert(t){const s=t=>{const s=this._model(t);s._.dl[t]&&(s[t]=s._.dl[t].original)};if("string"==typeof t){const e=t.split(" ");for(const t of e)s(t)}else if(Array.isArray(t))for(const e of t)s(e);else if(null==t){const t=Object.keys(this._.dt);for(const e of t)s(e)}}_changed(t){let s=!1;const e=this._model(t),i=e._delta(),o=t=>{let s=!1;return i[t]&&i[t].original!==e[t]&&(s=!0),s};if("string"==typeof t){const e=t.split(" ");for(const t of e)if(o(t)&&!1===s){s=!0;break}}else if(Array.isArray(t)){for(const e of t)if(o(e)&&!1===s){s=!0;break}}else if(null==t){s=Object.keys(i).length>0}return s}_watch(){let t,s,e={};if(arguments.length>0){if(1===arguments.length){"function"==typeof arguments[0]?t=arguments[0]:this._isObject(arguments[0])&&(s=arguments[0]);const e=Object.keys(this);for(const t of e)this[t]instanceof Model&&this[t]._watch(arguments[0])}else arguments.length>=2&&(s=arguments[0],t=arguments[1]);if("string"==typeof s&&"function"==typeof t){const i=s.split(" ");for(const s of i)e[s]=t}else if(Array.isArray(s)&&"function"==typeof t)for(const i of s)e[i]=t;else if(this._isObject(s))e=s;else if("function"==typeof t){const s=Object.keys(this._.dt);for(const i of s)this._isObject(this._.dt[i])||(e[i]=t)}const i=Object.keys(e);for(const s of i){const i=this._model(s);Array.isArray(i._.ev[s])&&-1===i._.ev[s].findIndex((s=>s.toString()===t.toString()))?i._.ev[s].push(e[s]):i._.ev[s]=[e[s]]}}}_unwatch(){let t,s;const e=t=>{const e=this._model(t);if("function"==typeof s&&Array.isArray(e._.ev[t])){var i=e._.ev[t].findIndex((t=>t.toString()===s.toString()));i>-1&&e._.ev[t].splice(i,1)}else e._.ev[t]=null,delete e._.ev[t]};if(arguments.length>0)if(1===arguments.length?"function"==typeof arguments[0]?s=arguments[0]:this._isObject(arguments[0])&&(t=arguments[0]):arguments.length>=2&&(t=arguments[0],s=arguments[1]),"string"==typeof t){const s=t.split(" ");for(const t of s)e(t)}else if(Array.isArray(t))for(const s of t)e(s);else if(this._isObject(t)){const s=Object.keys(t);for(const t of s)e(t)}else{const t=Object.keys(this._.dt);for(const s of t)this._isObject(this._.dt[s])||e(s)}else this._.ev={}}_add(t,s=null){this._.dt[t]=s,this._addProperty(t)}_clear(t={}){const s=Object.keys(this);for(const e of s)this[e]instanceof Model?this[e]._clear(t):t[e]?this[e]=t[e]:Array.isArray(this[e])?this[e]=[]:"boolean"==typeof this[e]?this[e]=!1:"number"==typeof this[e]?this[e]=0:"string"==typeof this[e]?this[e]="":this[e]=null}_getValue(t){const s=this._model(t),e=this._separate(t);return s[Array.isArray(e)?e[e.length-1]:e]}_setValue(t,s){const e=this._model(t),i=this._separate(t);e[Array.isArray(i)?i[i.length-1]:i]=s}}"undefined"!=typeof module&&void 0!==module.exports?module.exports={Model:Model}:(window.bimo=window.bimo||{},window.bimo.Model=Model);